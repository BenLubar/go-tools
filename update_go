#!/bin/bash -e

exec &> "$HOME/update_go.log"

# Get the Native Client SDK
if [[ ! -d "$HOME/.nacl_sdk" ]]
then
	cd "$HOME"
	rm -f .nacl_sdk.zip
	wget -O .nacl_sdk.zip "https://storage.googleapis.com/nativeclient-mirror/nacl/nacl_sdk/nacl_sdk.zip"
	unzip .nacl_sdk.zip
	mv "nacl_sdk" ".nacl_sdk"
	rm -f .nacl_sdk.zip
fi

cd "$HOME/.nacl_sdk"

./naclsdk update

nacl_version=$(./naclsdk list | grep -o 'pepper_\([0-9]\+\) (stable)' | cut -f1 -d' ')

# Get Go's source code

if [[ ! -d "$HOME/.golang" ]]
then
	git clone "https://go.googlesource.com/go" "$HOME/.golang"
fi

cd "$HOME/.golang"

git pull

git log --after=$(date --date="yesterday" +"%Y-%m-%dT04:00:00")

# Bootstrap

rm -rf "$HOME/.golang-bootstrap/"go-*

for v in 1.4 1.5 1.6
do
	if [[ "$v" == "1.4" ]]
	then
		# https://golang.org/issue/13114
		cgo=0
	else
		cgo=1
	fi
	git clone --depth 1 -b "release-branch.go$v" --reference "$HOME/.golang" "https://go.googlesource.com/go" "$HOME/.golang-bootstrap/go-$v"
	(cd "$HOME/.golang-bootstrap/go-$v/src" && CGO_ENABLED=$cgo ./make.bash)
	export GOROOT_BOOTSTRAP="$HOME/.golang-bootstrap/go-$v"
done

# Symlinks as defined in misc/nacl/README

mkdir -p bin

ln -nfs "$HOME/.nacl_sdk/$nacl_version/tools/sel_ldr_x86_32" "$HOME/.golang/bin/sel_ldr_x86_32"
ln -nfs "$HOME/.nacl_sdk/$nacl_version/tools/sel_ldr_x86_64" "$HOME/.golang/bin/sel_ldr_x86_64"
ln -nfs "$HOME/.nacl_sdk/$nacl_version/tools/sel_ldr_arm" "$HOME/.golang/bin/sel_ldr_arm"

ln -nfs "$HOME/.nacl_sdk/$nacl_version/tools/nacl_helper_bootstrap_x86_32" "$HOME/.golang/bin/nacl_helper_bootstrap_x86_32"
ln -nfs "$HOME/.nacl_sdk/$nacl_version/tools/nacl_helper_bootstrap_x86_64" "$HOME/.golang/bin/nacl_helper_bootstrap_x86_64"
ln -nfs "$HOME/.nacl_sdk/$nacl_version/tools/nacl_helper_bootstrap_arm" "$HOME/.golang/bin/nacl_helper_bootstrap_arm"

ln -nfs "$HOME/.golang/misc/nacl/go_nacl_amd64p32_exec" "$HOME/.golang/bin/go_nacl_amd64p32_exec"
ln -nfs "$HOME/.golang/misc/nacl/go_nacl_386_exec" "$HOME/.golang/bin/go_nacl_386_exec"
ln -nfs "$HOME/.golang/misc/nacl/go_nacl_arm_exec" "$HOME/.golang/bin/go_nacl_arm_exec"

# And now we compile!

cd src

./all.bash

# build the standard library for Go
../bin/go install -a std

# Install some utilities
source "$HOME/.profile"

old_GOPATH="$GOPATH"
old_GOBIN="$GOBIN"
export GOBIN="${old_GOBIN:-`cut -d: -f1 <<< "$old_GOPATH"`/bin}"
export GOPATH="$HOME/.golang-bootstrap/path"

../bin/go get -u -v \
	github.com/alecthomas/gometalinter \
	github.com/cortesi/devd/cmd/devd \
	github.com/derekparker/delve/cmd/dlv \
	github.com/garyburd/go-explorer/src/getool \
	github.com/golang/lint/golint \
	github.com/jstemmer/gotags \
	github.com/kisielk/errcheck \
	github.com/nsf/gocode \
	github.com/rogpeppe/godef \
	golang.org/x/tools/cmd/benchcmp \
	golang.org/x/tools/cmd/cover \
	golang.org/x/tools/cmd/godoc \
	golang.org/x/tools/cmd/goimports \
	golang.org/x/tools/cmd/gorename \
	golang.org/x/tools/cmd/oracle \
	golang.org/x/tools/cmd/ssadump

# gopherjs doesn't work on development versions of Go.
"$HOME/.golang-bootstrap/go-1.6/bin/go" get -u -v \
	github.com/gopherjs/gopherjs

"$GOBIN/gometalinter" --install --update

export GOPATH="$old_GOPATH"
export GOBIN="$old_GOBIN"

[[ -d "$HOME/.vim/bundle/vim-go" ]] && (cd "$HOME/.vim/bundle/vim-go" && git pull)
[[ -d "$HOME/.vim/bundle/tagbar" ]] && (cd "$HOME/.vim/bundle/tagbar" && git pull)
[[ -d "$HOME/.vim/bundle/go-explorer" ]] && (cd "$HOME/.vim/bundle/go-explorer" && git pull)
